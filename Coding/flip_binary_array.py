'''
给你一个二进制数组 nums 。
你可以对数组执行以下操作 任意 次（也可以 0 次）：选择数组中 任意 一个下标 i ，并将从下标 i 开始一直到数组末尾 所有 元素 反转 。反转一个元素指的是将它的值从 0 变 1 ，或者从 1 变 0 。
问：请你返回将 nums 中所有元素变为 1 的 最少 操作次数。

示例：
输入：nums = [0,1,1,0,1]
输出：4

解释：
我们可以执行以下操作：
选择下标 i = 1 执行操作，得到 nums = [0,0,0,1,0] 。
选择下标 i = 0 执行操作，得到 nums = [1,1,1,0,1] 。
选择下标 i = 4 执行操作，得到 nums = [1,1,1,0,0] 。
选择下标 i = 3 执行操作，得到 nums = [1,1,1,1,1] 。
'''


def min_flips(nums):
    flip = 0
    ops = 0
    for num in nums:
        actual = num ^ (flip % 2)  # 当前值是否和翻转次数不一致
        if actual == 0:  # 不等于1，需要翻转
            ops += 1
            flip += 1  # 从这个位置开始，未来所有值都被翻转
    return ops


if __name__ == "__main__":
    print(min_flips([0, 1, 1, 0, 1]))
    print(min_flips([0, 1, 1, 0, 0, 1]))
